# AI Coding Agent Configuration
# Copy this file to .env and configure your settings

# =============================================================================
# BASIC CONFIGURATION
# =============================================================================

# Required: Your email address
EMAIL=your.email@example.com

# Required: Anthropic API key for Claude
ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Optional: Claude service type to use
# ANTHROPIC = Claude Anthropic SDK  - Direct API access, fastest, production-ready
# CLAUDECODE = Claude Code CLI - Full dev environment, file system access, requires CLI installation
# CLAUDECODESDK = Claude Code TypeScript SDK (default) - Best of both worlds, programmatic API with dev tools
CLAUDE_SERVICE=CLAUDECODESDK

# Optional: Claude Code CLI timeout in milliseconds (default: 1800000 = 30 minutes)
# For very long operations like large git clones, increase this value
# Examples: 300000 = 5 minutes, 1800000 = 30 minutes, 3600000 = 60 minutes
CLAUDE_CODE_TIMEOUT_MS=1800000

# Optional: Access token to protect your API endpoints
ACCESS_TOKEN=your_secure_access_token_here

# Optional: Base URL for email links (defaults to http://localhost:3000)
BASE_URL=http://localhost:3000

# Optional: Port to run the server on (defaults to 3000)
PORT=3000

# Optional: Disable authentication for development
# DISABLE_AUTH=true

# =============================================================================
# MCP & PROMPTS CONFIGURATION  
# =============================================================================

# MCP Servers Configuration (JSON array or path to JSON file)
# Recommended: Use path to JSON file
MCP_SERVERS=examples/mcp-servers.json

# Example inline JSON (not recommended for complex configs):
# MCP_SERVERS=[{"name":"jira","type":"sse","url":"https://mcp.atlassian.com/v1/sse","authorization_token":null,"tool_configuration":{"enabled":true},"oauth_provider_configuration":null}]

# Prompts Configuration (JSON array or path to JSON file)
PROMPTS=examples/prompts.json

# =============================================================================
# GIT CONFIGURATION
# =============================================================================

# Git working directory - where repositories will be stored
# Local development: ./shared-repos
# Docker deployment: /shared/repos  
WORKING_DIR=./shared-repos

# Git home directory - where .git-credentials and .gitconfig are stored
# Local development: ${HOME} (your user home)
# Docker deployment: /home/appuser
GIT_HOME_DIR=${HOME}

# Git author information for commits made by the AI agent
GIT_AUTHOR_NAME=AI Coding Agent
GIT_AUTHOR_EMAIL=ai-coding-agent@example.com

# GitHub personal access token for git operations (cloning, pushing, etc.)
# Required for Docker deployments and private repositories
GIT_TOKEN=ghp_your_github_token_here

# Optional: Git username (defaults to "token" if not provided)  
GIT_USERNAME=your-github-username


# =============================================================================
# EMAIL CONFIGURATION (Optional)
# =============================================================================

# Email configuration for notifications
# If not configured, notifications will be logged to console
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_SECURE=false
EMAIL_USER=your.email@gmail.com
EMAIL_PASS=your_app_password
EMAIL_FROM=AI Coding Agent <your.email@gmail.com>

# =============================================================================
# OAUTH CONFIGURATION (Optional)
# =============================================================================

# OAuth redirect URI (defaults to http://localhost:3000/oauth/callback)
OAUTH_REDIRECT_URI=http://localhost:3000/oauth/callback


